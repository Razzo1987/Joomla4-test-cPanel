(a=>{'use strict';class b{constructor(){this.customValidators={},this.handlers=[],this.handlers={},this.removeMarking=this.removeMarking.bind(this),this.inputEmail=()=>{const b=a.createElement("input");return b.setAttribute("type","email"),"text"!==b.type},this.setHandler("username",a=>{return!/[<|>|"|'|%|;|(|)|&]/i.test(a)}),this.setHandler("password",a=>{return /^\S[\S ]{2,98}\S$/.test(a)}),this.setHandler("numeric",a=>{return /^(\d|-)?(\d|,)*\.?\d*$/.test(a)}),this.setHandler("email",a=>{const b=window.punycode.toASCII(a);return /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(b)});const b=[].slice.call(a.querySelectorAll("form"));b.forEach(a=>{a.classList.contains("form-validate")&&this.attachToForm(a)})}get custom(){return this.customValidators}set custom(a){this.customValidators=a}setHandler(a,b,c){this.handlers[a]={enabled:!(""!==c)||c,exec:b}}markValid(a){const b=a.form.querySelector(`label[for="${a.id}"]`);let c;(a.classList.contains("required")||a.getAttribute("required"))&&b&&(c=b.querySelector("span.form-control-feedback")),a.classList.remove("form-control-danger"),a.classList.remove("invalid"),a.classList.add("form-control-success"),a.parentNode.classList.remove("has-danger"),a.parentNode.classList.add("has-success"),a.setAttribute("aria-invalid","false"),c&&c.parentNode.removeChild(c),b&&b.classList.remove("invalid")}markInvalid(b,c){const d=b.form.querySelector(`label[for="${b.id}"]`);b.classList.remove("form-control-success"),b.classList.remove("valid"),b.classList.add("form-control-danger"),b.classList.add("invalid"),b.parentNode.classList.remove("has-success"),b.parentNode.classList.add("has-danger"),b.setAttribute("aria-invalid","true");let e;const f=b.getAttribute("data-validation-text");if(d&&(e=d.querySelector("span.form-control-feedback")),!e){const b=a.createElement("span");b.classList.add("form-control-feedback"),b.innerHTML=c&&"checkbox"===c?f||Joomla.JText._("JLIB_FORM_FIELD_REQUIRED_CHECK"):c&&"value"===c?f||Joomla.JText._("JLIB_FORM_FIELD_REQUIRED_VALUE"):f||Joomla.JText._("JLIB_FORM_FIELD_INVALID_VALUE"),d&&d.appendChild(b)}d&&d.classList.add("invalid")}removeMarking(a){let b;const c=a.form.querySelector(`label[for="${a.id}"]`);c&&(b=c.querySelector("span.form-control-feedback")),a.classList.remove("form-control-danger"),a.classList.remove("form-control-success"),a.classList.remove("invalid"),a.classList.add("valid"),a.parentNode.classList.remove("has-danger"),a.parentNode.classList.remove("has-success"),b&&c&&c.removeChild(b),c&&c.classList.remove("invalid")}handleResponse(a,b,c){"button"!==b.tagName.toLowerCase()&&b.value!==void 0&&(!1===a?this.markInvalid(b,c):this.markValid(b))}validate(a){let b;if("disabled"===a.getAttribute("disabled")||"none"===a.getAttribute("display"))return this.handleResponse(!0,a),!0;if(a.getAttribute("required")||a.classList.contains("required"))if(b=a.tagName.toLowerCase(),!("fieldset"===b&&(a.classList.contains("radio")||a.classList.contains("checkboxes")))){if("checkbox"===a.getAttribute("type")&&!0!==a.checked||"select"===b&&!a.value.length)return this.handleResponse(!1,a,"checkbox"),!1;if(!a.value||a.classList.contains("placeholder"))return this.handleResponse(!1,a,"value"),!1}else if(!a.querySelector("input:checked").length)return this.handleResponse(!1,a,"checkbox"),!1;const c=a.getAttribute("class")&&a.getAttribute("class").match(/validate-([a-zA-Z0-9_-]+)/)?a.getAttribute("class").match(/validate-([a-zA-Z0-9_-]+)/)[1]:"";if(a.getAttribute("pattern")&&""!==a.getAttribute("pattern")){if(a.value.length){const b=new RegExp(`^${a.getAttribute("pattern")}$`).test(a.value);return this.handleResponse(b,a,"empty"),b}return a.hasAttribute("required")||a.classList.contains("required")?(this.handleResponse(!1,a,"empty"),!1):(this.handleResponse(!0,a),!1)}return""===c?(this.handleResponse(!0,a),!0):c&&"none"!==c&&this.handlers[c]&&a.value&&!0!==this.handlers[c].exec(a.value,a)?(this.handleResponse(!1,a,"invalid_value"),!1):(this.handleResponse(!0,a),!0)}isValid(a){let b,c,d=!0;const e=[],f=[].slice.call(a.querySelectorAll("input, textarea, select, button"));return f.forEach(a=>{!1===this.validate(a)&&(d=!1,e.push(a))}),Object.keys(this.customValidators).length&&Object.keys(this.customValidators).foreach(a=>{!0!==this.customValidators[a].exec()&&(d=!1)}),!d&&0<e.length&&(b=a.getAttribute("data-validation-text")?a.getAttribute("data-validation-text"):Joomla.JText._("JLIB_FORM_CONTAINS_INVALID_FIELDS"),c={error:[b]},Joomla.renderMessages(c)),d}attachToForm(a){const b=[],c=[].slice.call(a.querySelectorAll("input, textarea, select, button, fieldset"));c.forEach(c=>{const d=c.tagName.toLowerCase();-1<["input","textarea","select","fieldset"].indexOf(d)&&c.classList.contains("required")&&c.setAttribute("required",""),("input"===d||"button"===d)&&("submit"===c.getAttribute("type")||"image"===c.getAttribute("type"))?c.classList.contains("validate")&&c.addEventListener("click",()=>this.isValid(a)):"button"!==d&&("input"!==d||"button"!==c.getAttribute("type"))&&("fieldset"!==d&&(c.addEventListener("blur",({target:a})=>this.validate(a)),c.addEventListener("focus",({target:a})=>this.removeMarking(a)),c.classList.contains("validate-email")&&this.inputEmail&&c.setAttribute("type","email")),b.push(c))})}}const c=()=>{a.formvalidator=new b,a.removeEventListener("DOMContentLoaded",c)};a.addEventListener("DOMContentLoaded",c)})(document);